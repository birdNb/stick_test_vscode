ARM GAS  C:\Users\BIRDs\AppData\Local\Temp\ccolbrRX.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
  21              		.align	1
  22              		.global	HAL_TIM_PeriodElapsedCallback
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	HAL_TIM_PeriodElapsedCallback:
  28              	.LVL0:
  29              	.LFB336:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "cmsis_os.h"
  22:Core/Src/main.c **** #include "adc.h"
  23:Core/Src/main.c **** #include "dma.h"
  24:Core/Src/main.c **** #include "spi.h"
  25:Core/Src/main.c **** #include "tim.h"
  26:Core/Src/main.c **** #include "usart.h"
  27:Core/Src/main.c **** #include "gpio.h"
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
ARM GAS  C:\Users\BIRDs\AppData\Local\Temp\ccolbrRX.s 			page 2


  30:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* USER CODE END Includes */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PTD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PD */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  45:Core/Src/main.c **** /* USER CODE BEGIN PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PM */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* USER CODE BEGIN PV */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PV */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  56:Core/Src/main.c **** void SystemClock_Config(void);
  57:Core/Src/main.c **** void MX_FREERTOS_Init(void);
  58:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END PFP */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  63:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* USER CODE END 0 */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /**
  68:Core/Src/main.c ****   * @brief  The application entry point.
  69:Core/Src/main.c ****   * @retval int
  70:Core/Src/main.c ****   */
  71:Core/Src/main.c **** int main(void)
  72:Core/Src/main.c **** {
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* USER CODE END 1 */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  81:Core/Src/main.c ****   HAL_Init();
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* USER CODE END Init */
  86:Core/Src/main.c **** 
ARM GAS  C:\Users\BIRDs\AppData\Local\Temp\ccolbrRX.s 			page 3


  87:Core/Src/main.c ****   /* Configure the system clock */
  88:Core/Src/main.c ****   SystemClock_Config();
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE END SysInit */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* Initialize all configured peripherals */
  95:Core/Src/main.c ****   MX_GPIO_Init();
  96:Core/Src/main.c ****   MX_DMA_Init();
  97:Core/Src/main.c ****   MX_SPI1_Init();
  98:Core/Src/main.c ****   MX_USART2_UART_Init();
  99:Core/Src/main.c ****   MX_USART1_UART_Init();
 100:Core/Src/main.c ****   MX_SPI2_Init();
 101:Core/Src/main.c ****   MX_ADC1_Init();
 102:Core/Src/main.c ****   MX_TIM3_Init();
 103:Core/Src/main.c ****   MX_TIM2_Init();
 104:Core/Src/main.c ****   MX_TIM7_Init();
 105:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* USER CODE END 2 */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* Call init function for freertos objects (in cmsis_os2.c) */
 110:Core/Src/main.c ****   MX_FREERTOS_Init();
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* Start scheduler */
 113:Core/Src/main.c ****   osKernelStart();
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* Infinite loop */
 118:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 119:Core/Src/main.c ****   while (1)
 120:Core/Src/main.c ****   {
 121:Core/Src/main.c ****     /* USER CODE END WHILE */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 124:Core/Src/main.c ****   }
 125:Core/Src/main.c ****   /* USER CODE END 3 */
 126:Core/Src/main.c **** }
 127:Core/Src/main.c **** 
 128:Core/Src/main.c **** /**
 129:Core/Src/main.c ****   * @brief System Clock Configuration
 130:Core/Src/main.c ****   * @retval None
 131:Core/Src/main.c ****   */
 132:Core/Src/main.c **** void SystemClock_Config(void)
 133:Core/Src/main.c **** {
 134:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 135:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 138:Core/Src/main.c ****   */
 139:Core/Src/main.c ****   HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1_BOOST);
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 142:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 143:Core/Src/main.c ****   */
ARM GAS  C:\Users\BIRDs\AppData\Local\Temp\ccolbrRX.s 			page 4


 144:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 145:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 147:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 148:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV3;
 149:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 85;
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 153:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 154:Core/Src/main.c ****   {
 155:Core/Src/main.c ****     Error_Handler();
 156:Core/Src/main.c ****   }
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 159:Core/Src/main.c ****   */
 160:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 161:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 162:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 163:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 164:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 165:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 168:Core/Src/main.c ****   {
 169:Core/Src/main.c ****     Error_Handler();
 170:Core/Src/main.c ****   }
 171:Core/Src/main.c **** }
 172:Core/Src/main.c **** 
 173:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 174:Core/Src/main.c **** 
 175:Core/Src/main.c **** /* USER CODE END 4 */
 176:Core/Src/main.c **** 
 177:Core/Src/main.c **** /**
 178:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 179:Core/Src/main.c ****   * @note   This function is called  when TIM6 interrupt took place, inside
 180:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 181:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 182:Core/Src/main.c ****   * @param  htim : TIM handle
 183:Core/Src/main.c ****   * @retval None
 184:Core/Src/main.c ****   */
 185:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 186:Core/Src/main.c **** {
  30              		.loc 1 186 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 186 1 is_stmt 0 view .LVU1
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
 187:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 190:Core/Src/main.c ****   if (htim->Instance == TIM6) {
ARM GAS  C:\Users\BIRDs\AppData\Local\Temp\ccolbrRX.s 			page 5


  40              		.loc 1 190 3 is_stmt 1 view .LVU2
  41              		.loc 1 190 11 is_stmt 0 view .LVU3
  42 0002 0268     		ldr	r2, [r0]
  43              		.loc 1 190 6 view .LVU4
  44 0004 034B     		ldr	r3, .L5
  45 0006 9A42     		cmp	r2, r3
  46 0008 00D0     		beq	.L4
  47              	.LVL1:
  48              	.L1:
 191:Core/Src/main.c ****     HAL_IncTick();
 192:Core/Src/main.c ****   }
 193:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 196:Core/Src/main.c **** }
  49              		.loc 1 196 1 view .LVU5
  50 000a 08BD     		pop	{r3, pc}
  51              	.LVL2:
  52              	.L4:
 191:Core/Src/main.c ****     HAL_IncTick();
  53              		.loc 1 191 5 is_stmt 1 view .LVU6
  54 000c FFF7FEFF 		bl	HAL_IncTick
  55              	.LVL3:
  56              		.loc 1 196 1 is_stmt 0 view .LVU7
  57 0010 FBE7     		b	.L1
  58              	.L6:
  59 0012 00BF     		.align	2
  60              	.L5:
  61 0014 00100040 		.word	1073745920
  62              		.cfi_endproc
  63              	.LFE336:
  65              		.section	.text.Error_Handler,"ax",%progbits
  66              		.align	1
  67              		.global	Error_Handler
  68              		.syntax unified
  69              		.thumb
  70              		.thumb_func
  72              	Error_Handler:
  73              	.LFB337:
 197:Core/Src/main.c **** 
 198:Core/Src/main.c **** /**
 199:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 200:Core/Src/main.c ****   * @retval None
 201:Core/Src/main.c ****   */
 202:Core/Src/main.c **** void Error_Handler(void)
 203:Core/Src/main.c **** {
  74              		.loc 1 203 1 is_stmt 1 view -0
  75              		.cfi_startproc
  76              		@ Volatile: function does not return.
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79              		@ link register save eliminated.
 204:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 205:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 206:Core/Src/main.c ****   __disable_irq();
  80              		.loc 1 206 3 view .LVU9
  81              	.LBB4:
ARM GAS  C:\Users\BIRDs\AppData\Local\Temp\ccolbrRX.s 			page 6


  82              	.LBI4:
  83              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
ARM GAS  C:\Users\BIRDs\AppData\Local\Temp\ccolbrRX.s 			page 7


  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\BIRDs\AppData\Local\Temp\ccolbrRX.s 			page 8


 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
ARM GAS  C:\Users\BIRDs\AppData\Local\Temp\ccolbrRX.s 			page 9


 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  84              		.loc 2 207 27 view .LVU10
  85              	.LBB5:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  86              		.loc 2 209 3 view .LVU11
  87              		.syntax unified
  88              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  89 0000 72B6     		cpsid i
  90              	@ 0 "" 2
  91              		.thumb
  92              		.syntax unified
  93              	.L8:
  94              	.LBE5:
  95              	.LBE4:
 207:Core/Src/main.c ****   while (1)
  96              		.loc 1 207 3 view .LVU12
 208:Core/Src/main.c ****   {
 209:Core/Src/main.c ****   }
  97              		.loc 1 209 3 view .LVU13
ARM GAS  C:\Users\BIRDs\AppData\Local\Temp\ccolbrRX.s 			page 10


 207:Core/Src/main.c ****   while (1)
  98              		.loc 1 207 9 view .LVU14
  99 0002 FEE7     		b	.L8
 100              		.cfi_endproc
 101              	.LFE337:
 103              		.section	.text.SystemClock_Config,"ax",%progbits
 104              		.align	1
 105              		.global	SystemClock_Config
 106              		.syntax unified
 107              		.thumb
 108              		.thumb_func
 110              	SystemClock_Config:
 111              	.LFB335:
 133:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 112              		.loc 1 133 1 view -0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 80
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116 0000 00B5     		push	{lr}
 117              	.LCFI1:
 118              		.cfi_def_cfa_offset 4
 119              		.cfi_offset 14, -4
 120 0002 95B0     		sub	sp, sp, #84
 121              	.LCFI2:
 122              		.cfi_def_cfa_offset 88
 134:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 123              		.loc 1 134 3 view .LVU16
 134:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 124              		.loc 1 134 22 is_stmt 0 view .LVU17
 125 0004 3822     		movs	r2, #56
 126 0006 0021     		movs	r1, #0
 127 0008 06A8     		add	r0, sp, #24
 128 000a FFF7FEFF 		bl	memset
 129              	.LVL4:
 135:Core/Src/main.c **** 
 130              		.loc 1 135 3 is_stmt 1 view .LVU18
 135:Core/Src/main.c **** 
 131              		.loc 1 135 22 is_stmt 0 view .LVU19
 132 000e 0020     		movs	r0, #0
 133 0010 0190     		str	r0, [sp, #4]
 134 0012 0290     		str	r0, [sp, #8]
 135 0014 0390     		str	r0, [sp, #12]
 136 0016 0490     		str	r0, [sp, #16]
 137 0018 0590     		str	r0, [sp, #20]
 139:Core/Src/main.c **** 
 138              		.loc 1 139 3 is_stmt 1 view .LVU20
 139 001a FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 140              	.LVL5:
 144:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 141              		.loc 1 144 3 view .LVU21
 144:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 142              		.loc 1 144 36 is_stmt 0 view .LVU22
 143 001e 0123     		movs	r3, #1
 144 0020 0693     		str	r3, [sp, #24]
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 145              		.loc 1 145 3 is_stmt 1 view .LVU23
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
ARM GAS  C:\Users\BIRDs\AppData\Local\Temp\ccolbrRX.s 			page 11


 146              		.loc 1 145 30 is_stmt 0 view .LVU24
 147 0022 4FF48033 		mov	r3, #65536
 148 0026 0793     		str	r3, [sp, #28]
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 149              		.loc 1 146 3 is_stmt 1 view .LVU25
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 150              		.loc 1 146 34 is_stmt 0 view .LVU26
 151 0028 0223     		movs	r3, #2
 152 002a 0D93     		str	r3, [sp, #52]
 147:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV3;
 153              		.loc 1 147 3 is_stmt 1 view .LVU27
 147:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV3;
 154              		.loc 1 147 35 is_stmt 0 view .LVU28
 155 002c 0322     		movs	r2, #3
 156 002e 0E92     		str	r2, [sp, #56]
 148:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 85;
 157              		.loc 1 148 3 is_stmt 1 view .LVU29
 148:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 85;
 158              		.loc 1 148 30 is_stmt 0 view .LVU30
 159 0030 0F92     		str	r2, [sp, #60]
 149:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 160              		.loc 1 149 3 is_stmt 1 view .LVU31
 149:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 161              		.loc 1 149 30 is_stmt 0 view .LVU32
 162 0032 5522     		movs	r2, #85
 163 0034 1092     		str	r2, [sp, #64]
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 164              		.loc 1 150 3 is_stmt 1 view .LVU33
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 165              		.loc 1 150 30 is_stmt 0 view .LVU34
 166 0036 1193     		str	r3, [sp, #68]
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 167              		.loc 1 151 3 is_stmt 1 view .LVU35
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 168              		.loc 1 151 30 is_stmt 0 view .LVU36
 169 0038 1293     		str	r3, [sp, #72]
 152:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 170              		.loc 1 152 3 is_stmt 1 view .LVU37
 152:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 171              		.loc 1 152 30 is_stmt 0 view .LVU38
 172 003a 1393     		str	r3, [sp, #76]
 153:Core/Src/main.c ****   {
 173              		.loc 1 153 3 is_stmt 1 view .LVU39
 153:Core/Src/main.c ****   {
 174              		.loc 1 153 7 is_stmt 0 view .LVU40
 175 003c 06A8     		add	r0, sp, #24
 176 003e FFF7FEFF 		bl	HAL_RCC_OscConfig
 177              	.LVL6:
 153:Core/Src/main.c ****   {
 178              		.loc 1 153 6 discriminator 1 view .LVU41
 179 0042 80B9     		cbnz	r0, .L13
 160:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 180              		.loc 1 160 3 is_stmt 1 view .LVU42
 160:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 181              		.loc 1 160 31 is_stmt 0 view .LVU43
 182 0044 0F23     		movs	r3, #15
 183 0046 0193     		str	r3, [sp, #4]
ARM GAS  C:\Users\BIRDs\AppData\Local\Temp\ccolbrRX.s 			page 12


 162:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 184              		.loc 1 162 3 is_stmt 1 view .LVU44
 162:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 185              		.loc 1 162 34 is_stmt 0 view .LVU45
 186 0048 0323     		movs	r3, #3
 187 004a 0293     		str	r3, [sp, #8]
 163:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 188              		.loc 1 163 3 is_stmt 1 view .LVU46
 163:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 189              		.loc 1 163 35 is_stmt 0 view .LVU47
 190 004c 0023     		movs	r3, #0
 191 004e 0393     		str	r3, [sp, #12]
 164:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 192              		.loc 1 164 3 is_stmt 1 view .LVU48
 164:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 193              		.loc 1 164 36 is_stmt 0 view .LVU49
 194 0050 0493     		str	r3, [sp, #16]
 165:Core/Src/main.c **** 
 195              		.loc 1 165 3 is_stmt 1 view .LVU50
 165:Core/Src/main.c **** 
 196              		.loc 1 165 36 is_stmt 0 view .LVU51
 197 0052 0593     		str	r3, [sp, #20]
 167:Core/Src/main.c ****   {
 198              		.loc 1 167 3 is_stmt 1 view .LVU52
 167:Core/Src/main.c ****   {
 199              		.loc 1 167 7 is_stmt 0 view .LVU53
 200 0054 0421     		movs	r1, #4
 201 0056 0DEB0100 		add	r0, sp, r1
 202 005a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 203              	.LVL7:
 167:Core/Src/main.c ****   {
 204              		.loc 1 167 6 discriminator 1 view .LVU54
 205 005e 20B9     		cbnz	r0, .L14
 171:Core/Src/main.c **** 
 206              		.loc 1 171 1 view .LVU55
 207 0060 15B0     		add	sp, sp, #84
 208              	.LCFI3:
 209              		.cfi_remember_state
 210              		.cfi_def_cfa_offset 4
 211              		@ sp needed
 212 0062 5DF804FB 		ldr	pc, [sp], #4
 213              	.L13:
 214              	.LCFI4:
 215              		.cfi_restore_state
 155:Core/Src/main.c ****   }
 216              		.loc 1 155 5 is_stmt 1 view .LVU56
 217 0066 FFF7FEFF 		bl	Error_Handler
 218              	.LVL8:
 219              	.L14:
 169:Core/Src/main.c ****   }
 220              		.loc 1 169 5 view .LVU57
 221 006a FFF7FEFF 		bl	Error_Handler
 222              	.LVL9:
 223              		.cfi_endproc
 224              	.LFE335:
 226              		.section	.text.main,"ax",%progbits
 227              		.align	1
ARM GAS  C:\Users\BIRDs\AppData\Local\Temp\ccolbrRX.s 			page 13


 228              		.global	main
 229              		.syntax unified
 230              		.thumb
 231              		.thumb_func
 233              	main:
 234              	.LFB334:
  72:Core/Src/main.c **** 
 235              		.loc 1 72 1 view -0
 236              		.cfi_startproc
 237              		@ Volatile: function does not return.
 238              		@ args = 0, pretend = 0, frame = 0
 239              		@ frame_needed = 0, uses_anonymous_args = 0
 240 0000 08B5     		push	{r3, lr}
 241              	.LCFI5:
 242              		.cfi_def_cfa_offset 8
 243              		.cfi_offset 3, -8
 244              		.cfi_offset 14, -4
  81:Core/Src/main.c **** 
 245              		.loc 1 81 3 view .LVU59
 246 0002 FFF7FEFF 		bl	HAL_Init
 247              	.LVL10:
  88:Core/Src/main.c **** 
 248              		.loc 1 88 3 view .LVU60
 249 0006 FFF7FEFF 		bl	SystemClock_Config
 250              	.LVL11:
  95:Core/Src/main.c ****   MX_DMA_Init();
 251              		.loc 1 95 3 view .LVU61
 252 000a FFF7FEFF 		bl	MX_GPIO_Init
 253              	.LVL12:
  96:Core/Src/main.c ****   MX_SPI1_Init();
 254              		.loc 1 96 3 view .LVU62
 255 000e FFF7FEFF 		bl	MX_DMA_Init
 256              	.LVL13:
  97:Core/Src/main.c ****   MX_USART2_UART_Init();
 257              		.loc 1 97 3 view .LVU63
 258 0012 FFF7FEFF 		bl	MX_SPI1_Init
 259              	.LVL14:
  98:Core/Src/main.c ****   MX_USART1_UART_Init();
 260              		.loc 1 98 3 view .LVU64
 261 0016 FFF7FEFF 		bl	MX_USART2_UART_Init
 262              	.LVL15:
  99:Core/Src/main.c ****   MX_SPI2_Init();
 263              		.loc 1 99 3 view .LVU65
 264 001a FFF7FEFF 		bl	MX_USART1_UART_Init
 265              	.LVL16:
 100:Core/Src/main.c ****   MX_ADC1_Init();
 266              		.loc 1 100 3 view .LVU66
 267 001e FFF7FEFF 		bl	MX_SPI2_Init
 268              	.LVL17:
 101:Core/Src/main.c ****   MX_TIM3_Init();
 269              		.loc 1 101 3 view .LVU67
 270 0022 FFF7FEFF 		bl	MX_ADC1_Init
 271              	.LVL18:
 102:Core/Src/main.c ****   MX_TIM2_Init();
 272              		.loc 1 102 3 view .LVU68
 273 0026 FFF7FEFF 		bl	MX_TIM3_Init
 274              	.LVL19:
ARM GAS  C:\Users\BIRDs\AppData\Local\Temp\ccolbrRX.s 			page 14


 103:Core/Src/main.c ****   MX_TIM7_Init();
 275              		.loc 1 103 3 view .LVU69
 276 002a FFF7FEFF 		bl	MX_TIM2_Init
 277              	.LVL20:
 104:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 278              		.loc 1 104 3 view .LVU70
 279 002e FFF7FEFF 		bl	MX_TIM7_Init
 280              	.LVL21:
 110:Core/Src/main.c **** 
 281              		.loc 1 110 3 view .LVU71
 282 0032 FFF7FEFF 		bl	MX_FREERTOS_Init
 283              	.LVL22:
 113:Core/Src/main.c **** 
 284              		.loc 1 113 3 view .LVU72
 285 0036 FFF7FEFF 		bl	osKernelStart
 286              	.LVL23:
 287              	.L16:
 119:Core/Src/main.c ****   {
 288              		.loc 1 119 3 view .LVU73
 124:Core/Src/main.c ****   /* USER CODE END 3 */
 289              		.loc 1 124 3 view .LVU74
 119:Core/Src/main.c ****   {
 290              		.loc 1 119 9 view .LVU75
 291 003a FEE7     		b	.L16
 292              		.cfi_endproc
 293              	.LFE334:
 295              		.text
 296              	.Letext0:
 297              		.file 3 "E:/VSCODE_TOOL/Arm_gnu/13.3 rel1/arm-none-eabi/include/machine/_default_types.h"
 298              		.file 4 "E:/VSCODE_TOOL/Arm_gnu/13.3 rel1/arm-none-eabi/include/sys/_stdint.h"
 299              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h"
 300              		.file 6 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 301              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_rcc.h"
 302              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 303              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_tim.h"
 304              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 305              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_pwr_ex.h"
 306              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 307              		.file 13 "Core/Inc/tim.h"
 308              		.file 14 "Core/Inc/adc.h"
 309              		.file 15 "Core/Inc/spi.h"
 310              		.file 16 "Core/Inc/usart.h"
 311              		.file 17 "Core/Inc/dma.h"
 312              		.file 18 "Core/Inc/gpio.h"
 313              		.file 19 "<built-in>"
ARM GAS  C:\Users\BIRDs\AppData\Local\Temp\ccolbrRX.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\BIRDs\AppData\Local\Temp\ccolbrRX.s:21     .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\BIRDs\AppData\Local\Temp\ccolbrRX.s:27     .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\BIRDs\AppData\Local\Temp\ccolbrRX.s:61     .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
C:\Users\BIRDs\AppData\Local\Temp\ccolbrRX.s:66     .text.Error_Handler:00000000 $t
C:\Users\BIRDs\AppData\Local\Temp\ccolbrRX.s:72     .text.Error_Handler:00000000 Error_Handler
C:\Users\BIRDs\AppData\Local\Temp\ccolbrRX.s:104    .text.SystemClock_Config:00000000 $t
C:\Users\BIRDs\AppData\Local\Temp\ccolbrRX.s:110    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\BIRDs\AppData\Local\Temp\ccolbrRX.s:227    .text.main:00000000 $t
C:\Users\BIRDs\AppData\Local\Temp\ccolbrRX.s:233    .text.main:00000000 main

UNDEFINED SYMBOLS
HAL_IncTick
memset
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_SPI1_Init
MX_USART2_UART_Init
MX_USART1_UART_Init
MX_SPI2_Init
MX_ADC1_Init
MX_TIM3_Init
MX_TIM2_Init
MX_TIM7_Init
MX_FREERTOS_Init
osKernelStart
